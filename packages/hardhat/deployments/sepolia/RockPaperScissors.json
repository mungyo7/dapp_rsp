{
  "address": "0xfAF7ab27AB44075204D49c2B24C9034C10ff75d9",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "playerChoice",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "contractChoice",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "result",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payout",
          "type": "uint256"
        }
      ],
      "name": "GamePlayed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_playerChoice",
          "type": "uint8"
        }
      ],
      "name": "play",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x33b9c57440db7a78979e8959cab22616df9fa99ed5155d47c401bc61d3acb6d0",
  "receipt": {
    "to": null,
    "from": "0xdc89956AC4ac8e9A77f657131B6f4e309E3f7E32",
    "contractAddress": "0xfAF7ab27AB44075204D49c2B24C9034C10ff75d9",
    "transactionIndex": 157,
    "gasUsed": "473894",
    "logsBloom": "0x
    "blockHash": "0x03fa4a692d1dd8a0e80cb95ba253d0db3902d063deb5ef63ec8ceffc74b9bebd",
    "transactionHash": "0x33b9c57440db7a78979e8959cab22616df9fa99ed5155d47c401bc61d3acb6d0",
    "logs": [
      {
        "transactionIndex": 157,
        "blockNumber": 7732398,
        "transactionHash": "0x33b9c57440db7a78979e8959cab22616df9fa99ed5155d47c401bc61d3acb6d0",
        "address": "0xfAF7ab27AB44075204D49c2B24C9034C10ff75d9",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000dc89956ac4ac8e9a77f657131b6f4e309e3f7e32"
        ],
        "data": "0x",
        "logIndex": 159,
        "blockHash": "0x03fa4a692d1dd8a0e80cb95ba253d0db3902d063deb5ef63ec8ceffc74b9bebd"
      }
    ],
    "blockNumber": 7732398,
    "cumulativeGasUsed": "16314198",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 5,
  "solcInputHash": "338310cb724496bb81c4c098d40ea8ac",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"playerChoice\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"contractChoice\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"result\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"GamePlayed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_playerChoice\",\"type\":\"uint8\"}],\"name\":\"play\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RockPaperScissors.sol\":\"RockPaperScissors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/RockPaperScissors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract RockPaperScissors is Ownable {\\r\\n    constructor() Ownable() {}\\r\\n\\r\\n    event GamePlayed(\\r\\n        address indexed player,\\r\\n        uint8 playerChoice,\\r\\n        uint8 contractChoice,\\r\\n        uint8 result,\\r\\n        uint256 payout\\r\\n    );\\r\\n\\r\\n    event FundsWithdrawn(address indexed owner, uint256 amount);\\r\\n\\r\\n    // \\ucee8\\ud2b8\\ub799\\ud2b8 \\uc794\\uc561 \\ud655\\uc778\\r\\n    function getBalance() public view returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    // \\uac8c\\uc784 \\ud50c\\ub808\\uc774 \\ud568\\uc218\\r\\n    function play(uint8 _playerChoice) public payable {\\r\\n        require(msg.value > 0, \\\"Betting amount must be greater than 0\\\");\\r\\n        require(_playerChoice >= 1 && _playerChoice <= 3, \\\"Invalid choice\\\");\\r\\n        \\r\\n        // \\ucee8\\ud2b8\\ub799\\ud2b8\\uc758 \\uc794\\uc561\\uc774 \\uc2b9\\ub9ac \\uc0c1\\uae08(\\ubca0\\ud305 \\uae08\\uc561\\uacfc \\ub3d9\\uc77c)\\uc744 \\uc9c0\\uae09\\ud560 \\uc218 \\uc788\\ub294\\uc9c0 \\ud655\\uc778\\r\\n        require(address(this).balance >= msg.value, \\\"Contract doesn't have enough balance for reward\\\");\\r\\n\\r\\n        uint8 contractChoice = uint8((block.number % 3) + 1); // 1, 2, 3\\r\\n        uint8 result;\\r\\n        uint256 payout;\\r\\n\\r\\n        // \\uac8c\\uc784 \\uacb0\\uacfc \\uacc4\\uc0b0 (1: \\ubc14\\uc704, 2: \\ubcf4, 3: \\uac00\\uc704)\\r\\n        if (_playerChoice == contractChoice) {\\r\\n            // \\ubb34\\uc2b9\\ubd80\\r\\n            result = 1;\\r\\n            payout = msg.value; // \\ubca0\\ud305 \\uae08\\uc561\\ub9cc \\ubc18\\ud658\\r\\n        } else if (\\r\\n            (_playerChoice == 1 && contractChoice == 3) || // \\ubc14\\uc704 vs \\uac00\\uc704\\r\\n            (_playerChoice == 2 && contractChoice == 1) || // \\ubcf4 vs \\ubc14\\uc704\\r\\n            (_playerChoice == 3 && contractChoice == 2)    // \\uac00\\uc704 vs \\ubcf4\\r\\n        ) {\\r\\n            // \\uc2b9\\ub9ac\\r\\n            result = 2;\\r\\n            payout = msg.value * 2; // \\ubca0\\ud305 \\uae08\\uc561 + \\uc0c1\\uae08(\\ubca0\\ud305 \\uae08\\uc561\\ub9cc\\ud07c)\\r\\n        } else {\\r\\n            // \\ud328\\ubc30\\r\\n            result = 0;\\r\\n            payout = 0; // \\ubca0\\ud305 \\uae08\\uc561 \\uc783\\uc74c\\r\\n        }\\r\\n\\r\\n        // \\uc2b9\\ub9ac\\ud558\\uac70\\ub098 \\ubb34\\uc2b9\\ubd80\\uc778 \\uacbd\\uc6b0\\uc5d0\\ub9cc \\ubcf4\\uc0c1\\uae08 \\uc9c0\\uae09\\r\\n        if (payout > 0) {\\r\\n            (bool success, ) = payable(msg.sender).call{value: payout}(\\\"\\\");\\r\\n            require(success, \\\"Failed to send payout\\\");\\r\\n        }\\r\\n\\r\\n        emit GamePlayed(msg.sender, _playerChoice, contractChoice, result, payout);\\r\\n    }\\r\\n\\r\\n    // \\ucee8\\ud2b8\\ub799\\ud2b8 \\uc18c\\uc720\\uc790\\uac00 \\uc790\\uae08\\uc744 \\uc778\\ucd9c\\ud558\\ub294 \\ud568\\uc218\\r\\n    function withdraw() public onlyOwner {\\r\\n        uint256 balance = address(this).balance;\\r\\n        require(balance > 0, \\\"No funds to withdraw\\\");\\r\\n        \\r\\n        (bool success, ) = payable(owner()).call{value: balance}(\\\"\\\");\\r\\n        require(success, \\\"Failed to withdraw funds\\\");\\r\\n        \\r\\n        emit FundsWithdrawn(owner(), balance);\\r\\n    }\\r\\n\\r\\n    // \\ucee8\\ud2b8\\ub799\\ud2b8\\uac00 \\uc774\\ub354\\ub97c \\ubc1b\\uc744 \\uc218 \\uc788\\ub3c4\\ub85d \\ud558\\ub294 \\ud568\\uc218\\r\\n    receive() external payable {}\\r\\n}\",\"keccak256\":\"0xb5f8e3888633b0342d13c1afa5a2192d6cbe1cc273d5b0ea2b97dd7549c27aa9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107278061007e6000396000f3fe6080604052600436106100595760003560e01c806312065fe0146100655780633ccfd60b1461008557806353a04b051461009c578063715018a6146100af5780638da5cb5b146100c4578063f2fde38b146100ec57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b506040514781526020015b60405180910390f35b34801561009157600080fd5b5061009a61010c565b005b61009a6100aa366004610636565b610253565b3480156100bb57600080fd5b5061009a6104ff565b3480156100d057600080fd5b506000546040516001600160a01b03909116815260200161007c565b3480156100f857600080fd5b5061009a610107366004610660565b610513565b61011461058c565b478061015e5760405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b60448201526064015b60405180910390fd5b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146101ab576040519150601f19603f3d011682016040523d82523d6000602084013e6101b0565b606091505b50509050806102015760405162461bcd60e51b815260206004820152601860248201527f4661696c656420746f2077697468647261772066756e647300000000000000006044820152606401610155565b6000546001600160a01b03166001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d8360405161024791815260200190565b60405180910390a25050565b600034116102b15760405162461bcd60e51b815260206004820152602560248201527f42657474696e6720616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610155565b60018160ff16101580156102c9575060038160ff1611155b6103065760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642063686f69636560901b6044820152606401610155565b3447101561036e5760405162461bcd60e51b815260206004820152602f60248201527f436f6e747261637420646f65736e2774206861766520656e6f7567682062616c60448201526e185b98d948199bdc881c995dd85c99608a1b6064820152608401610155565b600061037b600343610689565b6103869060016106c1565b90506000808260ff168460ff16036103a357506001905034610412565b8360ff1660011480156103b957508260ff166003145b806103d557508360ff1660021480156103d557508260ff166001145b806103f157508360ff1660031480156103f157508260ff166002145b1561040b576002915061040434836106da565b9050610412565b5060009050805b80156104aa57604051600090339083908381818185875af1925050503d806000811461045a576040519150601f19603f3d011682016040523d82523d6000602084013e61045f565b606091505b50509050806104a85760405162461bcd60e51b815260206004820152601560248201527411985a5b1959081d1bc81cd95b99081c185e5bdd5d605a1b6044820152606401610155565b505b6040805160ff8681168252858116602083015284168183015260608101839052905133917fd76a8252f9bd1308a591f69721370ed05f0935595661a7d5ba72c2f5f3c3d669919081900360800190a250505050565b61050761058c565b61051160006105e6565b565b61051b61058c565b6001600160a01b0381166105805760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610155565b610589816105e6565b50565b6000546001600160a01b031633146105115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561064857600080fd5b813560ff8116811461065957600080fd5b9392505050565b60006020828403121561067257600080fd5b81356001600160a01b038116811461065957600080fd5b6000826106a657634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b808201808211156106d4576106d46106ab565b92915050565b80820281158282048414176106d4576106d46106ab56fea2646970667358221220af8904b6484a84cd9f1608b2232f8dc8ca1750f2b2fcfbca9cfb33326711c79564736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c806312065fe0146100655780633ccfd60b1461008557806353a04b051461009c578063715018a6146100af5780638da5cb5b146100c4578063f2fde38b146100ec57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b506040514781526020015b60405180910390f35b34801561009157600080fd5b5061009a61010c565b005b61009a6100aa366004610636565b610253565b3480156100bb57600080fd5b5061009a6104ff565b3480156100d057600080fd5b506000546040516001600160a01b03909116815260200161007c565b3480156100f857600080fd5b5061009a610107366004610660565b610513565b61011461058c565b478061015e5760405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b60448201526064015b60405180910390fd5b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146101ab576040519150601f19603f3d011682016040523d82523d6000602084013e6101b0565b606091505b50509050806102015760405162461bcd60e51b815260206004820152601860248201527f4661696c656420746f2077697468647261772066756e647300000000000000006044820152606401610155565b6000546001600160a01b03166001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d8360405161024791815260200190565b60405180910390a25050565b600034116102b15760405162461bcd60e51b815260206004820152602560248201527f42657474696e6720616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610155565b60018160ff16101580156102c9575060038160ff1611155b6103065760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642063686f69636560901b6044820152606401610155565b3447101561036e5760405162461bcd60e51b815260206004820152602f60248201527f436f6e747261637420646f65736e2774206861766520656e6f7567682062616c60448201526e185b98d948199bdc881c995dd85c99608a1b6064820152608401610155565b600061037b600343610689565b6103869060016106c1565b90506000808260ff168460ff16036103a357506001905034610412565b8360ff1660011480156103b957508260ff166003145b806103d557508360ff1660021480156103d557508260ff166001145b806103f157508360ff1660031480156103f157508260ff166002145b1561040b576002915061040434836106da565b9050610412565b5060009050805b80156104aa57604051600090339083908381818185875af1925050503d806000811461045a576040519150601f19603f3d011682016040523d82523d6000602084013e61045f565b606091505b50509050806104a85760405162461bcd60e51b815260206004820152601560248201527411985a5b1959081d1bc81cd95b99081c185e5bdd5d605a1b6044820152606401610155565b505b6040805160ff8681168252858116602083015284168183015260608101839052905133917fd76a8252f9bd1308a591f69721370ed05f0935595661a7d5ba72c2f5f3c3d669919081900360800190a250505050565b61050761058c565b61051160006105e6565b565b61051b61058c565b6001600160a01b0381166105805760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610155565b610589816105e6565b50565b6000546001600160a01b031633146105115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561064857600080fd5b813560ff8116811461065957600080fd5b9392505050565b60006020828403121561067257600080fd5b81356001600160a01b038116811461065957600080fd5b6000826106a657634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b808201808211156106d4576106d46106ab565b92915050565b80820281158282048414176106d4576106d46106ab56fea2646970667358221220af8904b6484a84cd9f1608b2232f8dc8ca1750f2b2fcfbca9cfb33326711c79564736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/RockPaperScissors.sol:RockPaperScissors",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}